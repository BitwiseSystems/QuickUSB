// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "_repcdg.h"

// Dispatch interfaces referenced by this interface
#include "_Collection.h"
#include "RepositoryObject.h"

/////////////////////////////////////////////////////////////////////////////
// C_RepCdg

IMPLEMENT_DYNCREATE(C_RepCdg, CWnd)

/////////////////////////////////////////////////////////////////////////////
// C_RepCdg properties

/////////////////////////////////////////////////////////////////////////////
// C_RepCdg operations

C_Collection C_RepCdg::GetMcolRepositories()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x4003000f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return C_Collection(pDispatch);
}

void C_RepCdg::SetRefMcolRepositories(LPDISPATCH newValue)
{
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0x4003000f, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, parms,
		 newValue);
}

C_Collection C_RepCdg::GetMcolRepNames()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x40030010, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return C_Collection(pDispatch);
}

void C_RepCdg::SetRefMcolRepNames(LPDISPATCH newValue)
{
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0x40030010, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, parms,
		 newValue);
}

void C_RepCdg::SetCancelDialog(BOOL* newValue)
{
	static BYTE parms[] =
		VTS_PBOOL;
	InvokeHelper(0x6803000e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL C_RepCdg::GetCancelDialog()
{
	BOOL result;
	InvokeHelper(0x6803000e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void C_RepCdg::SetLookInString(BSTR* newValue)
{
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x6803000d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

void C_RepCdg::SetSelectedObject(BSTR* newValue)
{
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x6803000c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

void C_RepCdg::SetOverwritePrompt(BOOL* newValue)
{
	static BYTE parms[] =
		VTS_PBOOL;
	InvokeHelper(0x6803000b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL C_RepCdg::GetOverwritePrompt()
{
	BOOL result;
	InvokeHelper(0x6803000b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void C_RepCdg::SetObjectExists(BOOL* newValue)
{
	static BYTE parms[] =
		VTS_PBOOL;
	InvokeHelper(0x6803000a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL C_RepCdg::GetObjectExists()
{
	BOOL result;
	InvokeHelper(0x6803000a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void C_RepCdg::SetShowHidden(BOOL* newValue)
{
	static BYTE parms[] =
		VTS_PBOOL;
	InvokeHelper(0x68030009, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

CString C_RepCdg::GetSelectedObject()
{
	CString result;
	InvokeHelper(0x6803000c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void C_RepCdg::SetObjectName(BSTR* newValue)
{
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x68030008, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

CString C_RepCdg::GetObjectName()
{
	CString result;
	InvokeHelper(0x68030008, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void C_RepCdg::SetSelectedPackage(BSTR* newValue)
{
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x68030007, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

CString C_RepCdg::GetSelectedPackage()
{
	CString result;
	InvokeHelper(0x68030007, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void C_RepCdg::SetShowConnect(BOOL* newValue)
{
	static BYTE parms[] =
		VTS_PBOOL;
	InvokeHelper(0x68030006, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

void C_RepCdg::SetAction(short* newValue)
{
	static BYTE parms[] =
		VTS_PI2;
	InvokeHelper(0x68030005, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

short C_RepCdg::GetAction()
{
	short result;
	InvokeHelper(0x68030005, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

CString C_RepCdg::GetWinHelpFile()
{
	CString result;
	InvokeHelper(0x68030010, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void C_RepCdg::SetWinHelpFile(BSTR* newValue)
{
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x68030010, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

long C_RepCdg::GetHelpID()
{
	long result;
	InvokeHelper(0x6803000f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void C_RepCdg::SetHelpID(long* newValue)
{
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0x6803000f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

CString C_RepCdg::GetCurrentRepos()
{
	CString result;
	InvokeHelper(0x68030004, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void C_RepCdg::SetCurrentRepos(BSTR* newValue)
{
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x68030004, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

CRepositoryObject C_RepCdg::GetCurrentReposObject()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x68030003, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CRepositoryObject(pDispatch);
}

void C_RepCdg::SetRepositories(BSTR* newValue)
{
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x68030002, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

void C_RepCdg::SetFindInterfaces(BSTR* newValue)
{
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x68030001, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

void C_RepCdg::SetFindClasses(BSTR* newValue)
{
	static BYTE parms[] =
		VTS_PBSTR;
	InvokeHelper(0x68030000, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL C_RepCdg::GetInterface(LPDISPATCH* Obj, BSTR* InterfaceName, LPDISPATCH* Iface)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PDISPATCH VTS_PBSTR VTS_PDISPATCH;
	InvokeHelper(0x6003001f, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Obj, InterfaceName, Iface);
	return result;
}
